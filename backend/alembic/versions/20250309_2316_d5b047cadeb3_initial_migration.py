"""initial_migration

Revision ID: d5b047cadeb3
Revises: 
Create Date: 2025-03-09 23:16:41.341599

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd5b047cadeb3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('career_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False, comment='分类名称'),
    sa.Column('parent_id', sa.Integer(), nullable=True, comment='父分类ID'),
    sa.Column('level', sa.Integer(), nullable=False, comment='分类层级'),
    sa.Column('description', sa.String(length=200), nullable=True, comment='分类描述'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['parent_id'], ['career_categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False, comment='邮箱'),
    sa.Column('username', sa.String(length=50), nullable=False, comment='用户名'),
    sa.Column('phone', sa.String(length=20), nullable=True, comment='手机号'),
    sa.Column('hashed_password', sa.String(length=100), nullable=False, comment='密码哈希'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否激活'),
    sa.Column('is_superuser', sa.Boolean(), nullable=True, comment='是否为超级用户'),
    sa.Column('is_verified', sa.Boolean(), nullable=True, comment='是否验证'),
    sa.Column('last_login', sa.DateTime(), nullable=True, comment='最后登录时间'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('career_imports',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='导入记录ID'),
    sa.Column('filename', sa.String(length=200), nullable=False, comment='导入文件名'),
    sa.Column('file_size', sa.Integer(), nullable=True, comment='文件大小(字节)'),
    sa.Column('total_count', sa.Integer(), nullable=True, comment='总记录数'),
    sa.Column('success_count', sa.Integer(), nullable=True, comment='成功导入数'),
    sa.Column('failed_count', sa.Integer(), nullable=True, comment='失败记录数'),
    sa.Column('status', sa.String(length=20), nullable=True, comment='导入状态：pending-待处理，processing-处理中，completed-已完成，failed-失败'),
    sa.Column('error_details', sa.JSON(), nullable=True, comment='错误详情'),
    sa.Column('importer_id', sa.Integer(), nullable=False, comment='导入人ID'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['importer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('careers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False, comment='职业名称'),
    sa.Column('description', sa.Text(), nullable=True, comment='职业描述'),
    sa.Column('required_skills', sa.JSON(), nullable=True, comment='所需技能'),
    sa.Column('education_required', sa.String(length=50), nullable=True, comment='学历要求'),
    sa.Column('experience_required', sa.String(length=50), nullable=True, comment='经验要求'),
    sa.Column('career_path', sa.JSON(), nullable=True, comment='职业发展路径'),
    sa.Column('market_analysis', sa.JSON(), nullable=True, comment='市场分析'),
    sa.Column('salary_range', sa.JSON(), nullable=True, comment='薪资范围'),
    sa.Column('future_prospect', sa.String(length=50), nullable=True, comment='发展前景'),
    sa.Column('category_id', sa.Integer(), nullable=False, comment='分类ID'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['category_id'], ['career_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_profiles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='用户ID'),
    sa.Column('full_name', sa.String(length=50), nullable=True, comment='姓名'),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True, comment='出生日期'),
    sa.Column('address', sa.String(length=200), nullable=True, comment='地址'),
    sa.Column('education', sa.String(length=50), nullable=True, comment='学历'),
    sa.Column('work_experience', sa.String(length=1000), nullable=True, comment='工作经验'),
    sa.Column('skills', sa.JSON(), nullable=True, comment='技能列表'),
    sa.Column('bio', sa.String(length=1000), nullable=True, comment='个人简介'),
    sa.Column('avatar_url', sa.String(length=200), nullable=True, comment='头像URL'),
    sa.Column('learning_ability', sa.Float(), nullable=True, comment='学习能力评分'),
    sa.Column('skill_tags', sa.JSON(), nullable=True, comment='技能标签'),
    sa.Column('interests', sa.JSON(), nullable=True, comment='兴趣爱好'),
    sa.Column('career_interests', sa.JSON(), nullable=True, comment='职业兴趣方向'),
    sa.Column('personality_traits', sa.JSON(), nullable=True, comment='性格特征评估结果'),
    sa.Column('work_style', sa.JSON(), nullable=True, comment='工作风格偏好'),
    sa.Column('learning_style', sa.String(length=50), nullable=True, comment='学习风格'),
    sa.Column('growth_potential', sa.Float(), nullable=True, comment='发展潜力评分'),
    sa.Column('recommended_paths', sa.JSON(), nullable=True, comment='推荐的发展路径'),
    sa.Column('ai_analysis', sa.JSON(), nullable=True, comment='AI分析的综合评估结果'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('career_recommendations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='用户ID'),
    sa.Column('career_id', sa.Integer(), nullable=False, comment='职业ID'),
    sa.Column('match_score', sa.Integer(), nullable=True, comment='匹配分数'),
    sa.Column('analysis_report', sa.JSON(), nullable=True, comment='分析报告'),
    sa.Column('is_accepted', sa.Boolean(), nullable=True, comment='是否接受推荐'),
    sa.Column('feedback', sa.Text(), nullable=True, comment='用户反馈'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['career_id'], ['careers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('career_recommendations')
    op.drop_table('user_profiles')
    op.drop_table('careers')
    op.drop_table('career_imports')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('career_categories')
    # ### end Alembic commands ###
