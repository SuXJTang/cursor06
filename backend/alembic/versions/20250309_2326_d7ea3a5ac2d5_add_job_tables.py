"""add_job_tables

Revision ID: d7ea3a5ac2d5
Revises: d5b047cadeb3
Create Date: 2025-03-09 23:26:50.171707

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd7ea3a5ac2d5'
down_revision: Union[str, None] = 'd5b047cadeb3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('job_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False, comment='分类名称'),
    sa.Column('parent_id', sa.Integer(), nullable=True, comment='父分类ID'),
    sa.Column('level', sa.Integer(), nullable=False, comment='分类层级'),
    sa.Column('description', sa.String(length=200), nullable=True, comment='分类描述'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['parent_id'], ['job_categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('job_imports',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='导入记录ID'),
    sa.Column('filename', sa.String(length=200), nullable=False, comment='导入文件名'),
    sa.Column('file_size', sa.Integer(), nullable=True, comment='文件大小(字节)'),
    sa.Column('total_count', sa.Integer(), nullable=True, comment='总记录数'),
    sa.Column('success_count', sa.Integer(), nullable=True, comment='成功导入数'),
    sa.Column('failed_count', sa.Integer(), nullable=True, comment='失败记录数'),
    sa.Column('status', sa.String(length=20), nullable=True, comment='导入状态：pending-待处理，processing-处理中，completed-已完成，failed-失败'),
    sa.Column('error_details', sa.JSON(), nullable=True, comment='错误详情'),
    sa.Column('importer_id', sa.Integer(), nullable=False, comment='导入人ID'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['importer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False, comment='岗位名称'),
    sa.Column('company', sa.String(length=100), nullable=False, comment='公司名称'),
    sa.Column('description', sa.Text(), nullable=True, comment='岗位描述'),
    sa.Column('required_skills', sa.JSON(), nullable=True, comment='所需技能'),
    sa.Column('education_required', sa.String(length=50), nullable=True, comment='学历要求'),
    sa.Column('experience_required', sa.String(length=50), nullable=True, comment='经验要求'),
    sa.Column('salary_range', sa.JSON(), nullable=True, comment='薪资范围'),
    sa.Column('location', sa.String(length=100), nullable=True, comment='工作地点'),
    sa.Column('job_type', sa.String(length=50), nullable=True, comment='工作类型：全职/兼职/实习'),
    sa.Column('job_status', sa.String(length=20), nullable=True, comment='岗位状态：active-招聘中，closed-已结束'),
    sa.Column('benefits', sa.JSON(), nullable=True, comment='福利待遇'),
    sa.Column('category_id', sa.Integer(), nullable=False, comment='分类ID'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['category_id'], ['job_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('jobs')
    op.drop_table('job_imports')
    op.drop_table('job_categories')
    # ### end Alembic commands ###
