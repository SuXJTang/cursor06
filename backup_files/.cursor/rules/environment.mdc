# 开发环境配置

## 系统环境
- OS: Windows 10
- Node: v18.x
- npm: v9.x
- Shell: PowerShell 7-preview

## 项目技术栈
- Vue: ^3.4.0
- TypeScript: ^5.2.0
- Vite: ^5.0.0
- Element Plus: ^2.5.0（管理端）
- Vant: ^4.8.0（用户端）
- Pinia: ^2.1.0
- Vue Router: ^4.2.0
- Axios: ^1.6.0

## IDE 配置
- Editor: Cursor
- TypeScript Version: 5.2.x
- Formatter: Prettier
- Linter: ESLint
- File Encoding: UTF-8
- Line Ending: LF
- Tab Size: 2 spaces

## 代码规范
- 语言: TypeScript
- 风格指南: Vue3 Style Guide
- 命名规范: 
  - 文件名: PascalCase (组件)
  - 变量: camelCase
  - 常量: UPPER_SNAKE_CASE
  - 类型: PascalCase
- 最大行长度: 120
- 缩进: 2 spaces
- 分号: 必须
- 引号: 单引号
- 逗号: 尾随逗号

## 项目结构
```
src/
├── api/                # API 接口
├── assets/            # 静态资源
├── components/        # 组件
│   ├── common/       # 通用组件
│   ├── layout/       # 布局组件
│   └── business/     # 业务组件
├── composables/      # 组合式函数
├── config/           # 配置文件
├── directives/       # 自定义指令
├── hooks/            # 自定义钩子
├── locales/          # 国际化
├── router/           # 路由
├── stores/           # 状态管理
├── styles/           # 样式
├── types/            # 类型定义
├── utils/            # 工具函数
└── views/            # 页面
```

## 开发工具链
- 包管理器: pnpm
- 构建工具: Vite
- 测试框架: Vitest
- E2E测试: Cypress
- Git工作流: GitHub Flow
- CI/CD: GitHub Actions

## 浏览器支持
- Chrome >= 87
- Firefox >= 78
- Safari >= 14
- Edge >= 88

## 开发规范
- 组件开发: Composition API
- 状态管理: Pinia + Composition API
- 样式方案: SCSS + CSS Modules
- 类型检查: Strict Mode
- 代码提交: Conventional Commits
- 文档规范: JSDoc

## 性能要求
- 首屏加载: < 3s
- 页面切换: < 1s
- 接口响应: < 2s
- 内存占用: < 100MB
- 打包大小: < 300KB (gzip)

## 安全要求
- HTTPS
- XSS 防护
- CSRF 防护
- 数据加密
- 权限控制
- 输入验证

## 质量控制
- 单元测试覆盖率: > 80%
- E2E测试覆盖关键路径
- 代码审查
- 自动化测试
- 性能监控
- 错误监控

## 开发流程
1. 功能分支开发
2. 代码审查
3. 自动化测试
4. 预发布测试
5. 生产部署

## 发布流程
1. 版本号管理: Semantic Versioning
2. 更新日志: Conventional Changelog
3. 自动化部署
4. 灰度发布
5. 监控告警

## 调试工具
- Vue DevTools
- Chrome DevTools
- Network Panel
- Performance Panel
- Memory Panel
- Application Panel

## 文档要求
- README.md
- API文档
- 组件文档
- 部署文档
- 更新日志
- 贡献指南

## 代码注释
```typescript
/**
 * 组件注释示例
 * @component ComponentName
 * @description 组件描述
 * @example
 * ```vue
 * <component-name prop="value" />
 * ```
 */

/**
 * 函数注释示例
 * @function functionName
 * @description 函数描述
 * @param {string} param - 参数描述
 * @returns {Promise<void>} 返回值描述
 * @throws {Error} 错误描述
 */

/**
 * 类型注释示例
 * @interface InterfaceName
 * @description 接口描述
 * @property {string} prop - 属性描述
 */
```

## 环境变量
```env
# .env.development
VITE_API_BASE_URL=http://localhost:3000
VITE_APP_TITLE=开发环境

# .env.production
VITE_API_BASE_URL=https://api.example.com
VITE_APP_TITLE=生产环境
```

## 依赖管理
- 定期更新依赖
- 检查安全漏洞
- 控制依赖大小
- 避免重复依赖
- 锁定依赖版本

## 监控指标
- 页面性能
- API响应时间
- 错误率
- 用户行为
- 资源使用
- 业务指标

## 错误处理
- 全局错误捕获
- API错误处理
- 组件错误边界
- 错误日志
- 用户反馈
``` 